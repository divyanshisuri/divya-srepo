{
  
    
        "post0": {
            "title": "If/Else Lesson",
            "content": "What is an if statement? . An if statement is used to specify a block of Java code to be executed if a condition is true. . if (3.14 &gt; 1.5) { //the program decides whether this is true or not System.out.println(&quot;3.14 is greater than 1.5&quot;); //if it is then this line is printed } . 5 is greater than 2 . What is an if/else statement? . The if/else statement executes a block of code if a specified condition is true. If the condition is false, another block of code can be executed. . int time = 20; //set variable if (time &lt; 12) { //the program decides whether this is true or not System.out.println(&quot;Good day.&quot;); //if it is then print this line } else { System.out.println(&quot;Good evening.&quot;); //if it is not then print this } . Good evening. . What is an If-else If-else Statement? . int time = 12; if (time &lt; 12) { //the program decides whether this is true or not System.out.println(&quot;Good morning.&quot;); //if it is then print this line } else if (time &lt; 20) { //if it is not true, then check if this is true System.out.println(&quot;Good day.&quot;); //if it is then print this line } else { System.out.println(&quot;Good evening.&quot;); //or else print this line } . Good evening. . 5 If-Else Statements . Each . if (3.14 &gt; 1.5) { System.out.println(&quot;3.14 is greater than 1.5&quot;); } else if(3.14 &lt; 1.5) { System.out.println(&quot;3.14 is less than 1.5&quot;); } else if (7 &gt; 8) { System.out.println(&quot;8 is greater than 7&quot;); } else if (7 &lt; 8) { System.out.println(&quot;7 is less than 8&quot;); } else { System.out.println(&quot;Invalid&quot;); } . 3.14 is greater than 1.5 . What is a Switch Case Program in Java? . Java switch statement executes one statement from multiple conditions. . int x = 1; // the integer given in the variable is 20 String output; switch (x) { case 1: output = x + &quot; &gt; 0&quot;; break; case 2: output = x + &quot; &gt; 2&quot;; break; case 3: output = x + &quot; &gt; 3&quot;; break; case 4: output = x + &quot; &gt; 4&quot;; break; } System.out.println(output) . 1 &gt; 0 . De Morgan&#39;s Law . The complement of the union of two sets is the intersection of their complements and the complement of the intersection of two sets is the union of their complements. . || means &quot;or&quot; and the &amp;&amp; means &quot;and&quot; . boolean read = true; boolean bake = true; if (!(read &amp;&amp; bake)){ System.out.println(&quot;I do not like read or bake&quot;); } else{ System.out.println(&quot;I do like to read and bake&quot;); } . My favorite hobby is to read and bake . if (!bake || !read){ System.out.println(&quot;I do not like to read or bake&quot;); } else{ System.out.println(&quot;I like to read and bake&quot;); } . I do like to read or bake .",
            "url": "https://divyanshisuri.github.io/divya-srepo/fastpages/hacks/2022/09/25/ifelse.html",
            "relUrl": "/fastpages/hacks/2022/09/25/ifelse.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fibonacci",
            "content": "Stream (example) . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . For Loop . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; // starting with index 0 this.hash = new HashMap&lt;&gt;(); // initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboForLoop fib = new FiboForLoop(); fib.print(); } } /* Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ public class FiboForLoop extends Fibo { protected void init(){ this.name = &quot;For Loop&quot;; int num1 = 0; int num2 = 1; int num3; for(int i = 0; i &lt;= this.size; i++){ this.setData(num1); /* On each iteration, we are assigning second number * to the first number and assigning the sum of last two * numbers to the second number */ num3 = num1 + num2; num1 = num2; num3 = num3; } } } Fibo.main(null); . Init method = For Loop fibonacci Number 20 = 1 fibonacci List = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 1], 4=[0, 1, 1, 1, 1], 5=[0, 1, 1, 1, 1, 1], 6=[0, 1, 1, 1, 1, 1, 1], 7=[0, 1, 1, 1, 1, 1, 1, 1], 8=[0, 1, 1, 1, 1, 1, 1, 1, 1], 9=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 11=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 12=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 13=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 14=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 15=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 16=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 17=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 18=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 19=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 20=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 1] fibonacci Sequence 5 = [0, 1, 1, 1, 1] fibonacci Sequence 6 = [0, 1, 1, 1, 1, 1] fibonacci Sequence 7 = [0, 1, 1, 1, 1, 1, 1] fibonacci Sequence 8 = [0, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 9 = [0, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 10 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 11 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 12 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 13 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 14 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 15 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 16 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 17 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 18 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 19 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 20 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] . While Loop . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; // starting with index 0 this.hash = new HashMap&lt;&gt;(); // initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboWhileLoop fib = new FiboWhileLoop(); fib.print(); } } /* Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ public class FiboWhileLoop extends Fibo { protected void init(){ this.name = &quot;While Loop&quot;; int num1 = 0; int num2 = 1; int num3; int i = 0; while(i &lt;= this.size){ this.setData(num1); num3 = num1 + num2; num1 = num2; num3 = num3; i++; } } } Fibo.main(null); . Init method = While Loop fibonacci Number 20 = 1 fibonacci List = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 1], 4=[0, 1, 1, 1, 1], 5=[0, 1, 1, 1, 1, 1], 6=[0, 1, 1, 1, 1, 1, 1], 7=[0, 1, 1, 1, 1, 1, 1, 1], 8=[0, 1, 1, 1, 1, 1, 1, 1, 1], 9=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 11=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 12=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 13=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 14=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 15=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 16=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 17=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 18=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 19=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 20=[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 1] fibonacci Sequence 5 = [0, 1, 1, 1, 1] fibonacci Sequence 6 = [0, 1, 1, 1, 1, 1] fibonacci Sequence 7 = [0, 1, 1, 1, 1, 1, 1] fibonacci Sequence 8 = [0, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 9 = [0, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 10 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 11 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 12 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 13 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 14 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 15 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 16 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 17 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 18 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 19 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] fibonacci Sequence 20 = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] . Recursion . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; // starting with index 0 this.hash = new HashMap&lt;&gt;(); // initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboRecursion fib = new FiboRecursion(); fib.print(); } } /* Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ public class FiboRecursion extends Fibo { protected void init(){ this.name = &quot;Recursion&quot;; for(int i = 0; i &lt;= this.size; i++){ this.setData(fib(i)); } } public static int fib(int i) { if ((i == 0) || (i == 1)) { return i; } else{ return fib(i - 1) + fib(i - 2); } } } Fibo.main(null); . Init method = Recursion fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Recursion Example: . public static long fib(long n) { if ((n == 0) || (n == 1)) return n; else return fib(n - 1) + fib(n - 2); } . The method fib() calculates the fibonacci number at position n. If n is equal to 0 or 1, it returns n. Otherwise it recursively calls itself and returns fib(n - 1) + fib(n - 2). . public static int fib(int i) { if ((i == 0) || (i == 1)) { return i; . } else{ return fib(i - 1) + fib(i - 2); } } | .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2022/09/25/fibonacci.html",
            "relUrl": "/jupyter/2022/09/25/fibonacci.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "JavaScript",
            "content": "Build a Person Function/Class object and JSON . // define function logItType function logItType(output) { console.log(typeof output, &quot;;&quot;, output); //will print out the type of data, semicolon, and the data itself } // define a function to hold data for a Person function Person(name, ghID, age) { this.name = name; this.ghID = ghID; this.age = age; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { //Definition of a prototype allow for the definition of a method associated with the function&lt; this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, age: this.age, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable student var student = new Person(&quot;Divya&quot;, &quot;DivyaSuri&quot;, 16); // object type is easy to work with in JavaScript logItType(student); // before role logItType(student.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with student student.setRole(&quot;student&quot;); // set the role logItType(student); logItType(student.toJSON()); . object ; Person { name: &#39;Divya&#39;, ghID: &#39;DivyaSuri&#39;, age: 16, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Divya&#34;,&#34;ghID&#34;:&#34;DivyaSuri&#34;,&#34;age&#34;:16,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Divya&#39;, ghID: &#39;DivyaSuri&#39;, age: 16, role: &#39;student&#39; } string ; {&#34;name&#34;:&#34;Divya&#34;,&#34;ghID&#34;:&#34;DivyaSuri&#34;,&#34;age&#34;:16,&#34;role&#34;:&#34;student&#34;} . Build a Website Array/List of Persons and JSON . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); //will print out the type of data, semicolon, and the data itself } function Person(name, number, age) { this.name = name; this.number = number; this.age = age; this.role = &quot;&quot;; } Person.prototype.setRole = function(role) { //Definition of a prototype allow for the definition of a method associated with the function&lt; this.role = role; } Person.prototype.toJSON = function() { const obj = {name: this.name, number: this.number, age: this.age, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } var coder = new Person(&quot;Divya&quot;, 8581234567, 15); // object type is easy to work with in JavaScript logItType(coder); // before role logItType(coder.toJSON()); // ok to do this even though role is not yet defined coder.setRole(&quot;Coder&quot;); // set the role logItType(coder); logItType(coder.toJSON()); . object ; Person { name: &#39;Divya&#39;, number: 8581234567, age: 16, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Divya&#34;,&#34;number&#34;:8581234567,&#34;age&#34;:16,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Divya&#39;, number: 8581234567, age: 16, role: &#39;Coder&#39; } string ; {&#34;name&#34;:&#34;Divya&#34;,&#34;number&#34;:8581234567,&#34;age&#34;:16,&#34;role&#34;:&#34;Coder&#34;} . // define a user Array of Person(s) var users = [ new Person(&quot;Kat&quot;, &quot;8588888888&quot;, 17), new Person(&quot;Saumya&quot;, &quot;8583947583&quot;, 19), new Person(&quot;Qian&quot;, &quot;8583948501&quot;, 18), new Person(&quot;Lucia&quot;, &quot;8583749284&quot;, 16), new Person(&quot;Sarah&quot;, &quot;8583749843&quot;, 15) ]; // define a website and build Website objects and json function Website(coder, users){ // 1 teacher, many student // start website with Coder this.coder = coder; this.website = [coder]; // add each User to Website this.users = users; this.users.forEach(user =&gt; { user.setRole(&quot;User&quot;); this.website.push(user); }); // build json/string format of Website this.json = []; this.website.forEach(person =&gt; this.json.push(person.toJSON())); } // make a travel webiste from formerly defined coder and users travel = new Website(coder, users); // output of Objects and JSON in Travel website logItType(travel.website); // constructed website object logItType(travel.website[0].name); // abstract 1st objects name logItType(travel.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(travel.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Divya&#39;, number: 8581234567, age: 16, role: &#39;Coder&#39; }, Person { name: &#39;Grace&#39;, number: &#39;8588888888&#39;, age: 17, role: &#39;User&#39; }, Person { name: &#39;Ellen&#39;, number: &#39;8583947583&#39;, age: 17, role: &#39;User&#39; }, Person { name: &#39;Jeje&#39;, number: &#39;8583948501&#39;, age: 17, role: &#39;User&#39; }, Person { name: &#39;Charvi&#39;, number: &#39;8583749284&#39;, age: 17, role: &#39;User&#39; }, Person { name: &#39;Alison&#39;, number: &#39;8583749843&#39;, age: 17, role: &#39;User&#39; } ] string ; Divya string ; {&#34;name&#34;:&#34;Divya&#34;,&#34;number&#34;:8581234567,&#34;age&#34;:16,&#34;role&#34;:&#34;Coder&#34;} object ; { name: &#39;Divya&#39;, number: 8581234567, age: 16, role: &#39;Coder&#39; } . IJavaScript and Table formatting using toHTML method . // define an HTML conversion &quot;method&quot; associated with Webiste Website.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid white;&quot; + &quot;box-shadow: 0.4em 0.4em 0.4em white;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Number&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of travel.website for (var row in travel.website) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + travel.website[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.website[row].number + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.website[row].age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.website[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(travel._toHtml()); . NameNumberAgeRole . Divya | 8581234567 | 15 | Coder | Emily | 8588888888 | 17 | User | Alice | 8583947583 | 19 | User | Chloe | 8583948501 | 18 | User | Ann | 8583749284 | 16 | User | Abby | 8583749843 | 15 | User | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Team Project (travel website) Itinerary Table . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); //will print out the type of data, semicolon, and the data itself } function Time(start, destination, end) { this.start = start; this.destination = destination; this.end = end; this.month = &quot;&quot;; } Time.prototype.setMonth = function(month) { //Definition of a prototype allow for the definition of a method associated with the function&lt; this.month = month; } Time.prototype.toJSON = function() { const obj = {start: this.start, destination: this.destination, end: this.end, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } var august = new Time(&quot;8/20&quot;, &quot;Los Angeles&quot;, &quot;8/22&quot;); // object type is easy to work with in JavaScript august.setMonth(&quot;August&quot;); // set the role // define a user Array of Person(s) var septembers = [ new Time(&quot;9/5&quot;, &quot;China&quot;, &quot;9/30&quot;), new Time(&quot;9/17&quot;, &quot;Hawii&quot;, &quot;9/20&quot;), new Time(&quot;9/21&quot;, &quot;Japan&quot;, &quot;9/27&quot;), new Time(&quot;9/23&quot;, &quot;Korea&quot;, &quot;9/29&quot;), new Time(&quot;9/25&quot;, &quot;New York&quot;, &quot;9/28&quot;) ]; // define a website and build Website objects and json function Itinerary(august, septembers){ // 1 teacher, many student // start website with Coder august.setMonth(&quot;August&quot;); this.august = august; this.itinerary = [august]; // add each User to Website this.septembers = septembers; this.septembers.forEach(september =&gt; { september.setMonth(&quot;September&quot;); this.itinerary.push(september); }); // build json/string format of Website this.json = []; this.itinerary.forEach(time =&gt; this.json.push(time.toJSON())); } // make a travel webiste from formerly defined coder and users travel = new Itinerary(august, septembers); // define an HTML conversion &quot;method&quot; associated with Webiste Itinerary.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid white;&quot; + &quot;background-color: white;&quot; + &quot;color: black;&quot; ); console.log(&quot;Itinerary Example&quot;) // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Start Date&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Destination&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;End Date&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Month&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of travel.itinerary for (var row in travel.itinerary) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + travel.itinerary[row].start + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.itinerary[row].destination + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.itinerary[row].end + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + travel.itinerary[row].month + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(travel._toHtml()); . Itinerary Example . Start DateDestinationEnd DateMonth . 8/20 | Los Angeles | 8/22 | August | 9/5 | China | 9/30 | September | 9/17 | Hawii | 9/20 | September | 9/21 | Japan | 9/27 | September | 9/23 | Korea | 9/29 | September | 9/25 | New York | 9/28 | September | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . . .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2022/09/23/javascript.html",
            "relUrl": "/jupyter/2022/09/23/javascript.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Focus and Habits",
            "content": "Focus and Habits (Week 3 Human Prep) . Things I’m Grateful For . Family | Friends | Music | Food | Education | Abortion rights (oh wait I lost those) | Disney Movies | Netflix | Taylor Swift | Headphones | Hoodies | Fall Weather | Coffee | Reflection . I have a life that seems better than other individuals and what they may have to endure in their daily lives, and I should be grateful for it. | . Goals . 5 on AP CSA Exam | Get more confident | Lose some of the anxiety over dumb stuff |",
            "url": "https://divyanshisuri.github.io/divya-srepo/human/habits",
            "relUrl": "/human/habits",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Calculator Starters",
            "content": "| Menu | Calculator | Snake Game | . 0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . A/C 0 . √ sin cos tan ^ Degrees Radians = &lt;/body&gt; .",
            "url": "https://divyanshisuri.github.io/divya-srepo/frontend12/calculator",
            "relUrl": "/frontend12/calculator",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Classic Snake Game",
            "content": "| Menu | Calculator | Snake Game | . Snake score: 0 . . Welcome to Snake, press space to begin . new game settings Game Over, press space to try again . new game settings Settings Screen, press space to go back to playing . new game Speed: Slow Normal Fast . Wall: On Off .",
            "url": "https://divyanshisuri.github.io/divya-srepo/frontend12/snake",
            "relUrl": "/frontend12/snake",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Documentation/Analysis",
            "content": "Class . basic building block | must be given keyword &quot;class&quot; in java (at the top) followed by class name | followed by methods and variables | . | class declaration includes: Modifiers: A class can be public or has default access. | class keyword: The class keyword is used to create a class. | Class name: The name must begin with an initial letter (capitalized by convention). | Superclass (if any): The name of the class&#39;s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent. | Interfaces (if any): A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface. | Body: The class body surrounded by braces, { }. | . | . //to create a class public class Main { int x = 5; } . //multiple classes class Second { public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . Instance of a Object . non-static variables defined outside any method, constructor, block, etc. | has a separate copy or instance | belongs to a class | instance variables are in the class but outside methods | have different defaults that are later specified | can only be used when an object is made | is destroyed with the object it&#39;s assoc. with | not necessary to be initialized | accessible in the same class that declares them | cannot be declared static, abstract, etc. only final and transient | can be any fof the four java modifiers: private, public, protected, and default | . | include: boolean, byte, short, int, double, float, long, Object, char | . //to create an object public class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . //multiple objects public class Main { int x = 5; public static void main(String[] args) { Main myObj1 = new Main(); // Object 1 Main myObj2 = new Main(); // Object 2 System.out.println(myObj1.x); System.out.println(myObj2.x); } } . Methods . a block of code only running when called | used to pass data, (parameters) | perform actions, known also as functions | reuse code and define the code once to use repetitively | in the example below: myMethod() = name of method | static --&gt; means that the method belongs to the Main class and not an object of the Main class. | void --&gt; this method doesn&#39;t return a value | . | to call a method, write the method&#39;s name w/ 2 parentheses and a semicolon | . //basic method syntax public class Main { static void myMethod() { // code to be executed } } . //calling a method public class Main { static void myMethod() { System.out.println(&quot;I just got hired!&quot;); } public static void main(String[] args) { myMethod(); } } // Outputs &quot;I just got hired!&quot; . Object Mutation . faults inserted into a program that distinguish the mutant from the original program | certain objects are mutable vs. immutable | strings are immutable; will always rep. the same string but StringBuilder is mutable; it has methods to delete, insert, or replace characters | . | mutable types seem more powerful than immutable ones mutable is safer from bugs than immutable | easier to understand than immutable | . | . Console vs. GUI vs. Code.org . console: console class in java provides methods to access character-based console device | GUI = graphical user interface; graphical representation where users interact w/ software/devices through clickable icons | CLI: console/text/character based representation where user types commands into a terminal to operate or navigate the software/devices | Code.org: thus is CLI; typing of commands, character-based | .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2022/09/05/documentanalysis.html",
            "relUrl": "/jupyter/2022/09/05/documentanalysis.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Flashcards",
            "content": "public class QuestionBank { //array of question private String textQuestion[] = { &quot;What year did Queen Elizabeth II die?&quot;, &quot;Who was the first president of the United States&quot;, &quot;Who was the 2nd President of the US?&quot;, &quot;Who took part in World War 2?&quot; }; // multiple choice for each question private String multipleChoice[][]= { {&quot;2022&quot;,&quot;1784&quot;,&quot;1930&quot;}, {&quot;George Washington&quot;,&quot;John Adamns&quot;,&quot;Abhraham Lincoln&quot;}, {&quot;John Adams&quot;,&quot;Thomas Jefferson&quot;,&quot;Benjamin Harrison&quot;}, {&quot;Winston Churchill&quot;,&quot;Louis XIV&quot;,&quot;Martin Luther&quot;}, }; // arraqy of correct question answer private String mCorrectAnswer[] = {&quot;2022&quot;, &quot;George Washington&quot;, &quot;Winston Churchill&quot;, &quot;&quot;}; //method for get number of question public int getLength(){ return textQuestion.length; } public String getQuestion(int a){ String question = textQuestion[a]; return question; } //return single multiple choice item int list 1 2 3 4 as an argument public String getChoice(int index, int num){ String choice = multipleChoice[index][num-1]; return choice; } public String getCorrectAnswer(int a){ String answer = mCorrectAnswer[a]; return answer; } } . / imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // HashMap&lt;Integer, String&gt; hMapNumbers = new HashMap&lt;Integer, String&gt;(); // hMapNumbers.put(1, &quot;One&quot;); // hMapNumbers.put(2, &quot;Two&quot;); // hMapNumbers.put(3, &quot;Three&quot;); public final String[][] QUESTIONS = { // 2D Array of ANSI Terminal Colors {&quot;What year did Queen Elizabeth II die?&quot;, &quot;2022&quot;}, {&quot;First president of the united states?&quot;, &quot;George Washington&quot;}, {&quot;Who was the 2nd President of the US?&quot;, &quot;John Adams&quot;}, {&quot;Who was involved in World War II?&quot;, &quot;Winston Churchill&quot;}, }; // 2D column location for data public final int TITLE = 0; public final int VALUE = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - History Quiz&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][TITLE]); for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][VALUE]); // hMapNumbers.entrySet().forEach( entry -&gt; { // System.out.println( entry.getKey() + &quot; =&gt; &quot; + entry.getValue() ); // }); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); white_check_mark eyes raised_hands . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - History Quiz 0 - Quit - 4: What year was the DOI signed?What saved the capitol during the War of 1812?Who was the 2nd President of the US?Who was mainly involved in the corrupt bargain?1776ThunderstormJohn AdamsJohn Qunicy Adams .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2022/09/04/flashcards.html",
            "relUrl": "/jupyter/2022/09/04/flashcards.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Console Based Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Hello&quot;, &quot;Colors&quot;, &quot;Loading bar&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(300,200); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;Hello, World&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2022/09/02/console.html",
            "relUrl": "/jupyter/2022/09/02/console.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Extra Credit From Alumni Meeting (8/29)",
            "content": "Life In College/Insight . functions/programs/algorithms are such an experience to work with (visible with Colin’s experience in 3d modeling and Mabel’s experience with visualizing data in their respective mechanical and aerospace majors) | Working with API’s, JS, HTML, python, etc | CS helps a lot (internships, and basics) | Logical thinking is extremely important | Data visualizations include: Sorting algorithms, graph theory, etc. for visualizing | Data manipulation visible in mechanical engineering | Cam or computation-aided manufacturing | Simulations for materials that are done by hand and have to be converted into actual functions -- after further setup of resources, goal is to run those computations | | . | As for cognitive science, or the graphical design aspect w/ web development: design, ux ui (user interface/interaction) are very important | CSP gave a slight technical background (with CSS, HTML, etc.) | . | APCSA – Teaches you how to apply skills to real-world problems | Nitya’s example: Covid-19 Database Project when the pandemic hit during her year | . | . Advice &amp; Main Takeaways . Keep motivating yourself. Github is difficult to use sometimes and errors are consistent. There is ALWAYS a solution to a problem and an answer to a question. Use Google, use your teachers. Very important to utilize your resources. | | Clashing egos are difficult to encounter. CS Majors are often people to brag or talk about their accomplishments in excessive detail. It is important to not let that go to your head, and to instead take it as a seed of motivation to try harder. . | Focus on your path, and follow your own curve. The theory behind computer science is very different in college and the way that APCSA/P are structured is much more straightforward than it will be in college; it is thus important to use what you learned in highschool and apply to college. | | It is important to learn how to flowchart things and learn how to logically move through problems. | Fighting the temptation to BS -- hard work will turn out in the end. It is important to stop cutting corners and put everything in a box as a necessity to get points vs. actually learning the context and expanding thinking. | | Getting started in new areas is difficult. It’s difficult to get rid of structure that people are put in when they are organized and fixed. But CS Is many different ideas put together, and there are many PBL scenarios in college CS classes. One has to adapt to fit them al. . | In Colin’s case, there is one hands-on project freshman year and one senior year. All skills require PBL skills such as scrum methodology and collaboration. While the classes are more theory-based, many principles are continued. It is important to study in groups, work w/ others when you first arrive to college and as much as possible when you can to build relationships and to help understand better. . | Like everywhere, it is difficult to collaborate in college too, because it may be hard to understand content and your groups may not contribute enough. It is imperative to figure out efficiency. . | Menial tasks can be applied in many majors: copying/pasting, converting data types, word to spreadsheet, etc. | Take input convert into other input (write a script) | . | Coding is really everywhere | . | It’s important to take the wheel or offer: “I can code this part” | . | This doesn’t JUST apply to coding; problem-solving, cognitive and logical thinking | . | Math courses also help w cs | Math libraries in python | . | Jupyter notebooks; used in college a lot . | Cognitive Science | Uses stats, psychology courses, + programming | . | Inevitably you’re going to have to do programming | . | think about how you stack up against the other competitors; What makes YOU unique? | programming is useful in a multitude of different fields | personal projects can help you learn more and challenge yourself | . Connections . Use resume for internships | Internships at Northrop Grumman | Ask professors if there are spaces for you | Anthony – works @ Codeninjas | Opportunities; Cybersecurity intern: technical revisions, diagrams, etc. at Northrop Grumman | Triton AI, Club @ ucsd, which work on autonomous cars | Triton clubs that do ocean surveillance for the navy (Northrop Grumman) | A resume done by early Sep to get an internship by summer (generally open up in the fall) | Open a linkedin | Ask local/smaller company for highschool interns ‘ | .",
            "url": "https://divyanshisuri.github.io/divya-srepo/markdown/2022/08/29/extracred.html",
            "relUrl": "/markdown/2022/08/29/extracred.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Tools installation",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSA # change APCSA to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSA.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/divya/vscode exists. Directory /home/divya/vscode/APCSA does not exists... cloning https://github.com/nighthawkcoders/APCSA.git Cloning into &#39;APCSA&#39;... remote: Enumerating objects: 8951, done. remote: Counting objects: 100% (428/428), done. remote: Compressing objects: 100% (206/206), done. remote: Total 8951 (delta 248), reused 380 (delta 213), pack-reused 8523 Receiving objects: 100% (8951/8951), 14.50 MiB | 1.78 MiB/s, done. Resolving deltas: 100% (5022/5022), done. Directory /home/divya/vscode/APCSA exists. . lis (ls) . ls is used to list all the directories in the main directory. ls -a is used to list all the hidden files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags cd /home/divya/vscode/divya-srepo/ echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/divya list top level or root of files with project pulled from github APCSA ijava-1.3.0.zip Anaconda3-2022.05-Linux-x86_64.sh install.py Anaconda3-2022.05-Linux-x86_64.sh.1 java Anaconda3-2022.05-Linux-x86_64.sh.2 junk Anaconda3-2022.05-Linux-x86_64.sh.3 vscode anaconda3 list again with hidden files pulled from github . .landscape .wget-hsts .. .lesshst APCSA .bash_history .local Anaconda3-2022.05-Linux-x86_64.sh .bash_logout .m2 Anaconda3-2022.05-Linux-x86_64.sh.1 .bashrc .motd_shown Anaconda3-2022.05-Linux-x86_64.sh.2 .cache .node-gyp Anaconda3-2022.05-Linux-x86_64.sh.3 .conda .npm anaconda3 .config .profile ijava-1.3.0.zip .dbus .sudo_as_admin_successful install.py .gitconfig .vim java .ipython .viminfo junk .jupyter .vscode-server vscode bash: cd: /home/divya/vscode/divya-srepo/: No such file or directory list all files in long format total 2702080 drwxr-xr-x 20 divya divya 4096 Aug 23 08:50 . drwxr-xr-x 3 root root 4096 Aug 18 22:39 .. -rw- 1 divya divya 15229 Aug 26 00:22 .bash_history -rw-r--r-- 1 divya divya 220 Aug 18 22:39 .bash_logout -rw-r--r-- 1 divya divya 4246 Aug 19 09:38 .bashrc drwxr-xr-x 7 divya divya 4096 Aug 23 08:50 .cache drwxr-xr-x 2 divya divya 4096 Aug 19 09:23 .conda drwxr-xr-x 3 divya divya 4096 Aug 23 08:50 .config drwx 3 divya divya 4096 Aug 20 17:56 .dbus -rw-r--r-- 1 divya divya 56 Aug 18 22:51 .gitconfig drwxr-xr-x 3 divya divya 4096 Aug 20 18:46 .ipython drwxr-xr-x 2 divya divya 4096 Aug 20 11:29 .jupyter drwxr-xr-x 2 divya divya 4096 Aug 18 22:39 .landscape -rw- 1 divya divya 28 Aug 20 18:35 .lesshst drwxr-xr-x 5 divya divya 4096 Aug 20 18:46 .local drwxr-xr-x 3 divya divya 4096 Aug 21 21:48 .m2 -rw-r--r-- 1 divya divya 0 Aug 26 08:36 .motd_shown drwxr-xr-x 3 divya divya 4096 Aug 20 11:30 .node-gyp drwxr-xr-x 13 divya divya 4096 Aug 20 16:27 .npm -rw-r--r-- 1 divya divya 807 Aug 18 22:39 .profile -rw-r--r-- 1 divya divya 0 Aug 18 22:44 .sudo_as_admin_successful drwxr-xr-x 2 divya divya 4096 Aug 21 19:39 .vim -rw- 1 divya divya 805 Aug 21 19:39 .viminfo drwxr-xr-x 5 divya divya 4096 Aug 18 23:03 .vscode-server -rw-r--r-- 1 divya divya 218 Aug 20 18:58 .wget-hsts drwxr-xr-x 17 divya divya 4096 Aug 23 08:46 APCSA -rwxr-xr-x 1 divya divya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 divya divya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 -rw-r--r-- 1 divya divya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.2 -rw-r--r-- 1 divya divya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.3 drwxr-xr-x 28 divya divya 4096 Aug 20 11:29 anaconda3 -rw-r--r-- 1 divya divya 3366077 Dec 6 2021 ijava-1.3.0.zip -rw-r--r-- 1 divya divya 7471 May 5 2019 install.py drwxr-xr-x 3 divya divya 4096 May 5 2019 java drwxr-xr-x 4 divya divya 4096 Aug 21 20:08 junk drwxr-xr-x 20 divya divya 4096 Aug 25 23:11 vscode . all the posts appear . ls -l does this function, as cd is set to the posts folder . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory cd /home/divya/vscode/divya-srepo/_posts ls -l # list posts . Look for posts bash: cd: /_posts: No such file or directory /home/divya/vscode/divya-srepo/_notebooks bash: cd: /home/divya/vscode/divya-srepo/_posts: No such file or directory total 3144 -rw-r--r-- 1 divya divya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 divya divya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 divya divya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 divya divya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 divya divya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 divya divya 771 Aug 21 19:36 README.md drwxr-xr-x 2 divya divya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 divya divya 4096 Aug 21 19:36 my_icons . All the notebook files appear . ls -l does this function, as cd is set to the notebooks folder . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory cd /home/divya/vscode/divya-srepo/_notebooks ls -l # list notebooks . Look for notebooks bash: cd: /_notebooks: No such file or directory /home/divya/vscode/divya-srepo/_notebooks bash: cd: /home/divya/vscode/divya-srepo/_notebooks: No such file or directory total 3144 -rw-r--r-- 1 divya divya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 divya divya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 divya divya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 divya divya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 divya divya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 divya divya 771 Aug 21 19:36 README.md drwxr-xr-x 2 divya divya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 divya divya 4096 Aug 21 19:36 my_icons . This returns the contents in the read me file . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown cd /home/divya/vscode/divya-srepo/README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory bash: cd: /home/divya/vscode/divya-srepo/README.md: No such file or directory end of README.md . env . env command is for the enviroment. It returns all the environments that have been set up. We can check whether all the required environments have been set. . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/divya/vscode/APCSA CONDA_EXE=/home/divya/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/divyaa/vscode/APCSA LOGNAME=divya CONDA_PREFIX=/home/divya/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/divya/vscode HOME=/home/divya LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/divya/vscode/APCSA/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=divya PYTHONIOENCODING=utf-8 notebooks=/home/divya/vscode/APCSA/_notebooks CONDA_SHLVL=1 DISPLAY=:0 SHLVL=2 PAGER=cat project_repo=https://github.com/nighthawkcoders/APCSA.git VSCODE_CWD=/mnt/c/divya CONDA_PYTHON_EXE=/home/divya/anaconda3/bin/python XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=ELECTRON_RUN_AS_NODE/w: VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/prash/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/divya/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/home/divya/.local/bin:/home/divya/anaconda3/bin:/home/divya/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Users/prash/AppData/Local/Microsoft/WindowsApps:/mnt/c/Aadya/bin:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 PULSE_SERVER=/mnt/wslg/PulseServer VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/divya/vscode/APCSA/_notebooks VSCODE_IPC_HOOK_CLI=/mnt/wslg/runtime-dir/vscode-ipc-d123d553-5453-4217-b8bb-4bfec6326687.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git total 60 -rw-r--r-- 1 divya divya 23 Aug 25 23:11 HEAD drwxr-xr-x 2 divya divya 4096 Aug 25 23:11 branches -rw-r--r-- 1 divya divya 269 Aug 25 23:11 config -rw-r--r-- 1 divya divya 73 Aug 25 23:11 description drwxr-xr-x 2 divya divya 4096 Aug 25 23:11 hooks -rw-r--r-- 1 divya divya 20422 Aug 25 23:11 index drwxr-xr-x 2 divya divya 4096 Aug 25 23:11 info drwxr-xr-x 3 divya divya 4096 Aug 25 23:11 logs drwxr-xr-x 4 divya divya 4096 Aug 25 23:11 objects -rw-r--r-- 1 divya divya 271 Aug 25 23:11 packed-refs drwxr-xr-x 5 divya divya 4096 Aug 25 23:11 refs look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &#34;origin&#34;] url = https://github.com/nighthawkcoders/APCSA.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &#34;master&#34;] remote = origin merge = refs/heads/master .",
            "url": "https://divyanshisuri.github.io/divya-srepo/2022/08/27/bash_kernel.html",
            "relUrl": "/2022/08/27/bash_kernel.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Week 1 Primitive Work",
            "content": "int a = 1; float b = 3.14; float sum = (a + b); System.out.println(sum); . 3.45 . String 1 = &quot;divya&quot;; String 2 = &quot;suri&quot;; String name = 1 + &quot; &quot; + 2; System.out.println(name); . divya suri . boolean is_taking_CSA = true; boolean is_taking_CSP = false; if (is_taking_CSP){ System.out.println(&quot;divya is taking CSP&quot;); } else if (is_taking_CSA){ System.out.println(&quot;divya is taking CSA&quot;); } . divya is taking CSA .",
            "url": "https://divyanshisuri.github.io/divya-srepo/2022/08/24/primitives-work.html",
            "relUrl": "/2022/08/24/primitives-work.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Python Usage",
            "content": "print(&quot;hello world&quot;) . hello world .",
            "url": "https://divyanshisuri.github.io/divya-srepo/2022/08/22/python.html",
            "relUrl": "/2022/08/22/python.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Java Usage",
            "content": "System.out.println(&quot;hello&quot;) . hello .",
            "url": "https://divyanshisuri.github.io/divya-srepo/2022/08/22/java.html",
            "relUrl": "/2022/08/22/java.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Markdown Page",
            "content": "Markdown . This is an example of a markdown page! . Picnic . What to bring to the picnic: . cookies | cake | cupcakes | fruit | cheeseboard | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019",
            "url": "https://divyanshisuri.github.io/divya-srepo/markdown/2022/08/21/Markdown.html",
            "relUrl": "/markdown/2022/08/21/Markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://divyanshisuri.github.io/divya-srepo/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post16": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://divyanshisuri.github.io/divya-srepo/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Blog",
          "content": "Bucket List . Go sky diving | Learn how to make rock candy | Dance in the rain | Go to Japan | Watch a silent film | . Extra Cred . think about how you stack up against the other competitors | programming is useful in a lot of different fields | can be used to solve real world problems | starting comp sci is hard, keep motivation google helps with problems that you don’t understand | discipline, don’t give up and try not to slack off because these projects will help in the future. | . | egotistical people suck fr | temptation to bs is not good because if you cut corners it will get the best of you and you will be drowning in confusion | pbl is something that is going to be used in the future, make the most of it | personal projects can help enhancement in what you learned | . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://divyanshisuri.github.io/divya-srepo/Blog/",
          "relUrl": "/Blog/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me Divya!",
          "content": "I am a student at Del Norte Highschool! I love to paint and to code! . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://divyanshisuri.github.io/divya-srepo/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Frontend Changes",
          "content": "| Menu | Calculator | Snake Game | . Frontend! .",
          "url": "https://divyanshisuri.github.io/divya-srepo/frontend12/updates",
          "relUrl": "/frontend12/updates",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "Collegeboard",
          "content": "week 1 Notes . byte: The byte data type is an 8-bit signed two’s complement integer. It has a minimum value of -128 and a maximum value of 127 (inclusive). The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable’s range is limited can serve as a form of documentation. . | short: The short data type is a 16-bit signed two’s complement integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). As with byte, the same guidelines apply: you can use a short to save memory in large arrays, in situations where the memory savings actually matters. . | int: By default, the int data type is a 32-bit signed two’s complement integer, which has a minimum value of -231 and a maximum value of 231-1. In Java SE 8 and later, you can use the int data type to represent an unsigned 32-bit integer, which has a minimum value of 0 and a maximum value of 232-1. Use the Integer class to use int data type as an unsigned integer. See the section The Number Classes for more information. Static methods like compareUnsigned, divideUnsigned etc have been added to the Integer class to support the arithmetic operations for unsigned integers. . | long: The long data type is a 64-bit two’s complement integer. The signed long has a minimum value of -263 and a maximum value of 263-1. In Java SE 8 and later, you can use the long data type to represent an unsigned 64-bit long, which has a minimum value of 0 and a maximum value of 264-1. Use this data type when you need a range of values wider than those provided by int. The Long class also contains methods like compareUnsigned, divideUnsigned etc to support arithmetic operations for unsigned long. . | float: The float data type is a single-precision 32-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. As with the recommendations for byte and short, use a float (instead of double) if you need to save memory in large arrays of floating point numbers. This data type should never be used for precise values, such as currency. For that, you will need to use the java.math.BigDecimal class instead. Numbers and Strings covers BigDecimal and other useful classes provided by the Java platform. . | double: The double data type is a double-precision 64-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. For decimal values, this data type is generally the default choice. As mentioned above, this data type should never be used for precise values, such as currency. . | boolean: The boolean data type has only two possible values: true and false. Use this data type for simple flags that track true/false conditions. This data type represents one bit of information, but its “size” isn’t something that’s precisely defined. . | char: The char data type is a single 16-bit Unicode character. It has a minimum value of ‘ u0000’ (or 0) and a maximum value of ‘ uffff’ (or 65,535 inclusive). . | . week 2 Notes . java (code.org) learnings . variables . in Java, variables are a mechanism to store values. There are different types of variables – the most commonly used variables are listed below: | A boolean is one of two values: true or false. _* * Example instantiation: boolean done = false; | An int stores whole numbers (no decimals). _* * Example instantiation: int x = 1; _* * A double stores decimals with up to 15 digits of precision. _* * Example instantiation: double y = -1.479582834; | A String stores text using double quotes “”. _* * Example instantiation: String name = “Sam”; the main method | . main method; where program starts running . public: The method needs to be public for the JVM to identify it. | static: static in this context means that there will be only one type of this method and that it will be shared. | when we call the main method, it does not require a new instantiated object – it can be called without the creation of a new object. | void: There is nothing returned from the main method. | main: The general signature of the main method that is identified by the JVM to execute any program from start to finish. | String[] args: The main method’s argument (or input parameter) is an array of type String. This allows the method to accept command line arguments, which are stored as Strings in this variable. The name args can be changed. inheritance | . superclass: the class that the new class inherits from is generally called the parent or super class . subclass: the class that inherits from the superclass | We use the extends keyword to explicitly state the superclass. | . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://divyanshisuri.github.io/divya-srepo/collegeboard/",
          "relUrl": "/collegeboard/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page9": {
          "title": "Table of Contents",
          "content": "This website is powered by **[fastpages](https://github.com/fastai/fastpages)** [^1]. [^1]:a blogging platform that natively supports Jupyter notebooks in addition to other formats.",
          "url": "https://divyanshisuri.github.io/divya-srepo/table%20of%20contents/",
          "relUrl": "/table of contents/",
          "date": ""
      }
      
  

  

  
  

  
  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://divyanshisuri.github.io/divya-srepo/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}